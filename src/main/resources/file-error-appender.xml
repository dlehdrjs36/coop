<included>
    <appender name="FILE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>./logs/error/error-${BY_DATE}.log</file> <!-- 파일을 저장할 경로를 정한다. 하루가 지나면 새로운 파일로 저장된다. -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch> <!-- 해당 레벨만 기록한다. -->
            <onMismatch>DENY</onMismatch> <!-- 다른 수준의 레벨은 기록하지 않는다.(상위 레벨도 기록 안함), 상위 수준의 레벨에 대한 기록을 원하면 ACCEPT 로 하면 기록된다. -->
        </filter> <!-- 레벨별 필터링이 필요없을 경우 filter class 관련된 부분을 삭제하면 됨-->
        <encoder>
            <pattern>${LOG_PATTERN}</pattern> <!-- 해당 패턴 네이밍으로 현재 로그가 기록됨 -->
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"><!-- 크기와 시간을 기준으로 파일을 저장하는 정책을 사용한다. -->
            <fileNamePattern>./backup/error/error-%d{yyyy-MM-dd}.%i.log</fileNamePattern> <!-- 해당 패턴 네이밍으로 이전 파일이 기록됨 -->
            <maxFileSize>100MB</maxFileSize> <!-- 한 파일의 최대 용량 -->
            <maxHistory>30</maxHistory> <!-- 한 파일의 최대 저장 기한. file 태그에 설정한 옵션에 영향을 받는다. 현재 file 태그는 하루마다 파일을 생성하므로 30일이 최대 저장기한이다. 만약 file 태그가 한달마다 파일을 생성한다면 30개월이 최대 저장기한이 된다. -->
            <totalSizeCap>3GB</totalSizeCap> <!-- 전체 파일의 최대 저장 크기 -->
        </rollingPolicy>
    </appender>
</included>